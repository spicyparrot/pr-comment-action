name: 🧪 Unit Testing

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:    
    - '**'        # matches every branch
    - '!trunk'    # excludes trunk and limit to branches used in pull requests

env:
  ENVIRONMENT: "ci"

jobs:
  test-code:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: 🛀 Checkout Self
        uses: actions/checkout@v3

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4.7.1
        with:
            python-version: '3.9'

      - name: Setup
        run: |
          make deps
          
      - name: 🏃‍♀️ Run Unit Tests
        run: |
            make cov

      - name: ⬆ Upload Reports
        uses: actions/upload-artifact@v3.1.2
        if: always()
        with:
          name: 👨‍🔬 Results
          path: ./tests/reports/*


      - name: Hack files (https://community.sonarsource.com/t/codecoverage-not-showing-in-sonarcloud-in-a-python-project/53298/3)
        run: |
          mkdir -p coverage-reports
          mv ./tests/reports/coverage.xml ./coverage-reports/coverage.xml


      # TODO - infer this from pipeline variables
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.organization=spicyparrot
            -Dsonar.projectKey=spicyparrot_pr-comment
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=./src 
            -Dsonar.python.coverage.reportPaths=tests/reports/coverage.xml
            -Dsonar.coverage.exclusions=tests/*

      #- name: 🐛 Debugger
      #  if: ${{ failure() }}
      #  timeout-minutes: 20 
      #  uses: mxschmitt/action-tmate@v3.17
      #  with:
      #    limit-access-to-actor: false

  test-review:
    name: Unit Test Review
    needs: [test-code]
    if: always()            
    runs-on: ubuntu-latest
    steps:
      - name: 🎌 Flag Test Failures
        if: needs.test-code.result !='success'
        uses: actions/github-script@v6.3.3
        with:
          script: core.setFailed("Unit tests are failing!❌😵☠")

      - name: 🙌 Pass Unit Test
        run: printf "${GREEN}Unit tests have passed! ✅"
